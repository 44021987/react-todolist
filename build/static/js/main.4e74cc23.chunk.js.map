{"version":3,"sources":["components/form.js","components/list.js","components/footer.js","App.js","serviceWorker.js","index.js"],"names":["Form","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","state","value","alert","addList","Date","getTime","refs","form","reset","setState","handleChange","target","react_default","a","createElement","ref","className","type","onChange","onClick","Component","styles","mar_b","marginBottom","borderBottom","padding","span","marginRight","btn","background","border","cursor","List","delete","index","deleteList","checkState","checkListState","iListDom","_this2","status","dataList","data","iList","filter","item","i","complete","map","key","id","style","bind","title","createList","Foot","setStatus","getAttribute","data-value","App","concat","slice","splice","components_form","list","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e74cc23.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Form extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {value: ''};\r\n  }\r\n  handleSubmit = e => {\r\n    if (this.state.value === '') {\r\n      alert('输入框为必填项');\r\n      return false;\r\n    }\r\n    this.props.addList(this.state.value, new Date().getTime());\r\n    this.refs.form.reset();\r\n    this.setState({value: ''});\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <form ref=\"form\" className=\"center\">\r\n        <input type=\"text\" onChange={this.handleChange}/>\r\n        <button type=\"button\" onClick={this.handleSubmit}>submit</button>\r\n      </form>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Form;","import React, { Component }  from 'react';\r\nconst styles = {\r\n  mar_b: {\r\n    marginBottom: '10px',\r\n    borderBottom: '1px solid #ccc',\r\n    padding: '10px'\r\n  },\r\n  span: {\r\n    marginRight: '20px'\r\n  },\r\n  btn: {\r\n    background: '#fff',\r\n    border: '1px solid #ccc',\r\n    padding: '6px 20px',\r\n    cursor: 'pointer'\r\n  }\r\n}\r\nclass List extends Component {\r\n\r\n  delete = (index, e) => {\r\n    this.props.deleteList(index);\r\n  }\r\n  checkState = (index, e) => {\r\n    this.props.checkListState(index);\r\n  }\r\n  render() {\r\n    const status = this.props.status;\r\n    const dataList = this.props.data;\r\n    const createList = (item, i) => {\r\n      return (\r\n        <li key={item.id} style={styles.mar_b}>\r\n          <span style={styles.span}>{i+1}</span>\r\n          <span style={styles.span} className={item.complete=== 0 ? 'cursor-color' : 'line'} onClick={this.checkState.bind(this, i)}>{item.title}</span>\r\n          <span style={styles.span}>{item.complete === 0 ? '未完成' : '已完成'}</span>\r\n          <span style={styles.span}>{item.id}</span>\r\n          <button style={styles.btn} onClick={this.delete.bind(this, i)}>删除</button>\r\n        </li>\r\n      )\r\n    }\r\n    let iList = null;\r\n    let iListDom = null;\r\n    if (status === '0') {\r\n      iList = dataList\r\n    } else if (status === '1') {\r\n      iList = dataList.filter((item, i) => {\r\n        return item.complete === 1\r\n      })\r\n    } else {\r\n      iList = dataList.filter((item, i) => {\r\n        return item.complete === 0\r\n      })\r\n    }\r\n    iListDom = iList && iList.map((item, i) => createList(item, i))\r\n    return (\r\n      <ul>\r\n        {iListDom}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default List","import React, { Component }  from 'react';\r\n\r\nclass Foot extends Component {\r\n  setStatus = e => {\r\n    this.props.setStatus(e.target.getAttribute('data-value'))\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"center\">\r\n        <button data-value=\"0\" onClick={this.setStatus}>全部</button>\r\n        <button data-value=\"1\" onClick={this.setStatus}>已完成</button>\r\n        <button data-value=\"2\" onClick={this.setStatus}>未完成</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Foot","import React, { Component } from 'react';\nimport Form from './components/form'\nimport List from './components/list'\nimport Foot from './components/footer'\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    status: '0', // 0 全部 1 已完成 2 未完成\n    data: this.props.data || [{\n      title: 'test',\n      id: 1,\n      complete: 0\n    }]\n  }\n  addList = (title, id) => {\n    const data = this.state.data.concat({\n      title,\n      id,\n      complete: 0\n    });\n    this.setState({data, status: '0'})\n  }\n  deleteList = index => {\n    const data = this.state.data.slice();\n    data.splice(index, 1);\n    this.setState({data})\n  }\n  checkListState = index => {\n    const data = this.state.data.slice();\n    data[index].complete = 1;\n    this.setState({data});\n  }\n  setStatus = status => {\n    this.setState({\n      status\n    })\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Form addList={this.addList}/>\n        <List status={this.state.status} deleteList={this.deleteList} data={this.state.data} checkListState={this.checkListState}/>\n        <Foot setStatus={this.setStatus}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import axios from 'axios'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n"],"sourceRoot":""}